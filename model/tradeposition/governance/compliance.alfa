namespace ALFABANK.Regulatory.Compliance


# Annotation to be used for Personal Identifiable Info against various definitions
annotation PII (entity, record, trait, field ) {
    # Sensitivity of the PII
    Sensitivity : DataSensitivity = DataSensitivity.Medium

    # Classification of the PII
    Classification : DataClassification = DataClassification.InternalOnly
}

# Types of Sensitivity against PII info
enum DataSensitivity {
    High Medium Low
}

# Types of Classification against PII info
enum DataClassification {
    Public InternalOnly Confidential Restricted
}


# Regions that can be classified for specific legal and data processing requirements
enum RegionCode {
    China

    # See [Published docs](https://gdpr-info.eu/)
    @CloudRegion( gcpRegions = [ "europe-west2", "europe-west1", "europe-west4", "europe-west6"], azureRegions = ["Switzerland North"] )
    Europe
    
    # See [Published docs](https://www.linklaters.com/en/insights/data-protected/data-protected---india)
    India

    # See [Published docs](https://www.linklaters.com/en/insights/data-protected/data-protected---singapore)
    Singapore

    # See [Published docs](https://www.linklaters.com/en/insights/data-protected/data-protected---switzerland)
    @CloudRegion( gcpRegions = [ "europe-west2", "europe-west1", "europe-west4", "europe-west6"], azureRegions = ["Switzerland North"] )
    Swiss
    
    US
}

# Locations a target type can be considered as having valid residency
annotation Residency ( trait, record, entity ) {
    # Valid regions for this residency
    Locations : list< RegionCode >          
}

#Â Regions by Cloud vendors to be used to mark RegionCode specific vendor regions
annotation CloudRegion ( entity, record, trait, field ) {
    # Based on https://azure.microsoft.com/en-gb/global-infrastructure/geographies/
    azureRegions : list< string >?

    # Based on https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints 
    awsRegions : list< string >?

    # Based on https://cloud.google.com/about/locations
    gcpRegions : list < string >?
}
